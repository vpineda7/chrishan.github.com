<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Han Xiaogang's Blog</title><link href="http://blog.hanxiaogang.com/" rel="alternate"></link><link href="http://blog.hanxiaogang.com/feeds/coding.atom.xml" rel="self"></link><id>http://blog.hanxiaogang.com/</id><updated>2014-07-01T15:40:00+08:00</updated><entry><title>How to use the APIs to collect data from Sina Weibo</title><link href="http://blog.hanxiaogang.com/weibo-data.html" rel="alternate"></link><updated>2014-07-01T15:40:00+08:00</updated><author><name>Han Xiaogang</name></author><id>tag:blog.hanxiaogang.com,2014-07-01:weibo-data.html</id><summary type="html">&lt;p&gt;Suppose you want to extract tweets posted by a selected group of Weibo users. Here are the steps:&lt;/p&gt;
&lt;h2&gt;Step 1: Create a new Weibo account&lt;/h2&gt;
&lt;p&gt;After the account is created, manually add the target users (whose tweets you want to collect) as your followees.&lt;/p&gt;
&lt;h2&gt;Step 2: Create a new app on Weibo Open Platform&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;create a &lt;a href="http://open.weibo.com/apps/new?sort=web"&gt;new app (网页应用)&lt;/a&gt; (应用地址：http://127.0.0.1)&lt;/li&gt;
&lt;li&gt;configure callback addresses on advanced setting page (授权回调页：http://127.0.0.1:8000/weibo, 取消授权回调页：http://127.0.0.1:8000/weibo/cancel)&lt;/li&gt;
&lt;li&gt;App Key and App Secret will be issued on the basic setting page&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Step 3: install python SDK&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;sinaweibopy&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Step 4: obtain tweets data&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;weibo&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;webbrowser&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pymongo&lt;/span&gt;

&lt;span class="n"&gt;APP_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;YOUR_API_KEY&lt;/span&gt;
&lt;span class="n"&gt;APP_SECRET&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;YOUR_API_SECRET&lt;/span&gt;
&lt;span class="n"&gt;REDIRECT_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://127.0.0.1:8000/weibo&amp;#39;&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_access_token&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;api&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;weibo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;APIClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;APP_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;APP_SECRET&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;authorize_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;api&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_authorize_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;REDIRECT_URL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;authorize_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;webbrowser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open_new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;authorize_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;raw_input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;authencation code: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;api&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request_access_token&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;REDIRECT_URL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;access_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;access_token&lt;/span&gt;
    &lt;span class="n"&gt;expires_in&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expires_in&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;access token: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;access_token&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;expire: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expires_in&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_data&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;access_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;expires_in&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;api&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;weibo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;APIClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;APP_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;APP_SECRET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;redirect_uri&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;REDIRECT_URL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;api&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_access_token&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;access_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expires_in&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;api&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;statuses&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;home_timeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;YOUR_USERID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;statuses&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;save_data&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Connection&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tweets_db&lt;/span&gt;
    &lt;span class="n"&gt;tweets_table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tweets_table&lt;/span&gt;
    &lt;span class="n"&gt;tweets_table&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ensure_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;tweets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;orignal_count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweets_table&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tweet&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tweets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;tweets_table&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]},&lt;/span&gt; &lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;added: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tweets_table&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;orignal_count&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;run a local web server to  &lt;code&gt;python -m SimpleHTTPServer&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;copy the code below into a text editor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;run &lt;code&gt;get_access_token()&lt;/code&gt;. During code execution, your browser will open with address like: &lt;em&gt;http://127.0.0.1:8000/weibo?code=bc3de7eee81bb9a03b6d608a&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;copy the &lt;em&gt;code&lt;/em&gt; back into the console which is waiting for your input, and hit &lt;em&gt;Enter&lt;/em&gt;. The &lt;em&gt;access token&lt;/em&gt; and its &lt;em&gt;expire time&lt;/em&gt; will be printed in the console.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;copy and assign &lt;em&gt;access token&lt;/em&gt; and &lt;em&gt;expire time&lt;/em&gt; to the corresponding variables in &lt;code&gt;get_data()&lt;/code&gt; function, obtain the userid of your account and assign it to &lt;em&gt;uid&lt;/em&gt; in &lt;code&gt;api.statuses.home_timeline.get(uid=YOUR_USERID, count=100)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;run &lt;code&gt;save_data()&lt;/code&gt;, and the data will be saved to MongoDB&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;notes&lt;/strong&gt; : you may need to run &lt;code&gt;get_access_token()&lt;/code&gt; per few days to refresh &lt;em&gt;access token&lt;/em&gt; in case it expires.&lt;/p&gt;
&lt;h2&gt;Useful links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;http://github.liaoxuefeng.com/sinaweibopy/&lt;/li&gt;
&lt;li&gt;http://blog.csdn.net/changemyself/article/details/9172807&lt;/li&gt;
&lt;/ul&gt;</summary><category term="sns"></category><category term="weibo"></category><category term="data"></category></entry><entry><title>SSH Login Without Password</title><link href="http://blog.hanxiaogang.com/ssh-login.html" rel="alternate"></link><updated>2014-06-27T13:20:00+08:00</updated><author><name>Han Xiaogang</name></author><id>tag:blog.hanxiaogang.com,2014-06-27:ssh-login.html</id><summary type="html">&lt;p&gt;Suppose you want to access to Linux machine B from windows machine A. Here is the steps to setup passwordless ssh login.&lt;/p&gt;
&lt;h2&gt;Generate public/private keys on local machine A&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use PuttyGEN to generate public/private keys and save them to the same directory on &lt;em&gt;machine A&lt;/em&gt;. For the public key, copy the generated key from the textbox rather than clicking the save button (use &lt;code&gt;ssh-keygen -t dsa&lt;/code&gt; to generate the keys in ~/.ssh if on linux)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy the generated public key to machine B&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Configure public key on the server B&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;
&lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="n"&gt;public_key&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;authorized_keys&lt;/span&gt;
&lt;span class="n"&gt;chmod&lt;/span&gt; &lt;span class="mi"&gt;700&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;
&lt;span class="n"&gt;chmod&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;authorized_keys&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Login from machine A without password&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Use Putty to ssh to the server (with the private key loaded at Putty-&amp;gt;SSH-&amp;gt;Auth)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Useful links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;http://manjeetdahiya.com/2011/03/03/passwordless-ssh-login/&lt;/li&gt;
&lt;li&gt;http://askubuntu.com/questions/204400/ssh-public-key-no-supported-authentication-methods-available-server-sent-publ&lt;/li&gt;
&lt;/ul&gt;</summary><category term="ssh"></category></entry><entry><title>Setup SCM Manager</title><link href="http://blog.hanxiaogang.com/setup-scm-manager.html" rel="alternate"></link><updated>2014-06-26T11:02:00+08:00</updated><author><name>Han Xiaogang</name></author><id>tag:blog.hanxiaogang.com,2014-06-26:setup-scm-manager.html</id><summary type="html">&lt;p&gt;&lt;a href="http://www.scm-manager.org/"&gt;SCM Manager&lt;/a&gt; is an easy to use Git/Mercurial/Subvision repositories server. It's written in Java and very easy to install and config (web-interface). It is standalone (no apache or database required) and provides user/group/permission management.&lt;/p&gt;
&lt;p&gt;I primarily use Mercurial. This post is the step-by-step guide to use it as a Mercurial server on Windows servers.&lt;/p&gt;
&lt;h4&gt;Step 0 (dependencies)&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Install &lt;a href="http://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html"&gt;JRE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install Python and Mercurial (don't forget to add both of them to System Path)&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;Step 1&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Download &lt;a href="http://www.scm-manager.org/download/"&gt;SCM Manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/sdorra/scm-manager/wiki/daemons"&gt;Run SCM Manager as a service/daemon&lt;/a&gt;: &lt;code&gt;scm-server.bat install&lt;/code&gt; and start the &lt;em&gt;scm-server&lt;/em&gt; service manually in the Windows services panel (change &lt;em&gt;Startup Type&lt;/em&gt; from &lt;em&gt;Manual&lt;/em&gt; to &lt;em&gt;Automatic&lt;/em&gt; if necessary).&lt;/li&gt;
&lt;li&gt;Open localhost:8080 and login with default account: scmadmin/scmadmin&lt;/li&gt;
&lt;li&gt;Open the &lt;em&gt;Repository Types&lt;/em&gt; panel and check the HG Binary path and Python Binary path are correctly located. (If not, click &lt;em&gt;Start Configuration Wizard&lt;/em&gt; button to config from local installation. The &lt;em&gt;download and install&lt;/em&gt; function has bug and may not install python properly.)&lt;/li&gt;
&lt;li&gt;Add new repository under the &lt;em&gt;Repository&lt;/em&gt; panel. If everything works, you will be able to access to the repository via its url and clone the repo via: &lt;code&gt;hg clone http://scmadmin@ip:8080/scm/hg/testhg_repo&lt;/code&gt; on your local machine.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;update: It is much easier to get SCM Manager setup on Linux. To run it as a daemon, just add &lt;code&gt;JAVA_HOME=/usr/lib/jvm/(yourjdkdir)&lt;/code&gt; to &lt;code&gt;bin/scm-server&lt;/code&gt; and run &lt;code&gt;sudo ./scm-server start&lt;/code&gt;. Step 1.4 above is not required.&lt;/p&gt;</summary><category term="version-control"></category><category term="git"></category><category term="mercurial"></category></entry></feed>